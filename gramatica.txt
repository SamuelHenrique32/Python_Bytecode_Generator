PROGRAM -> LSTCMD end
LSTCMD -> CMDIF LSTRCMD
LSTCMD -> CMDFOR LSTRCMD
LSTCMD -> CMDWHILE LSTRCMD
LSTCMD -> CMDFUNC LSTRCMD
LSTCMD -> CMDRETURN LSTRCMD
LSTCMD -> EXPATTR LSTRCMD
LSTCMD -> EXECFUNC LSTRCMD
LSTCMD -> EXPATTRMUL LSTRCMD
LSTCMD -> CMDCST LSTRCMD


LSTRCMD -> LSTCMD
LSTRCMD -> VAZIO

OPCST -> int
OPCST -> float
OPCST -> double
OPCST -> bool
OPCST -> str
OPCST -> char


CMDCST -> OPCST ( id )

OPCMP -> <
OPCMP -> >
OPCMP -> <=
OPCMP -> >=
OPCMP -> !=
OPCMP -> ==

OPEXPP1 -> +
OPEXPP1 -> -

OPEXPP2 -> *
OPEXPP2 -> /
OPEXPP2 -> //
OPEXPP2 -> %
OPEXPP2 -> &
OPEXPP2 -> |
OPEXPP2 -> ~
OPEXPP2 -> ^
OPEXPP2 -> >>
OPEXPP2 -> <<

OPEXPP4 -> id
OPEXPP4 -> numconst

EXPCMP -> EXPP1 OPCMP EXPP1
EXPCMP -> id
EXPCMP -> EXPP1

EXPP1 -> EXPP2 OPEXPP1 EXPP1
EXPP1 -> EXPP2

EXPP2 -> EXPP3 OPEXPP2 EXPP2
EXPP2 -> EXPP3


EXPP3 -> EXPP4 ** EXPP3
EXPP3 -> EXPP4

EXPP4 -> OPEXPP4
EXPP4 -> ( EXPBOOL )

EXPBOOL -> EXPOR

EXPOR -> EXPAND or EXPOR
EXPOR -> EXPAND

EXPAND -> EXPNOT and EXPAND
EXPAND -> EXPNOT

EXPNOT -> not EXPNOT
EXPNOT -> EXPCMP

OPATTR -> = 
OPATTR -> += 
OPATTR -> -= 
OPATTR -> *= 
OPATTR -> /=
OPATTR -> %= 
OPATTR -> //= 
OPATTR -> **= 
OPATTR -> &= 
OPATTR -> |= 
OPATTR -> ^= 
OPATTR -> >>= 
OPATTR -> <<= 

EXPATTRMUL -> id LSTMUL  

EXPATTR -> id LSTIDS

LSTIDS -> , id LSTIDS
LSTIDS -> OPATTR VALLAST LSTVAL
 
LSTMUL -> OPATTR id LSTMUL
LSTMUL -> OPATTR numconst
LSTMUL -> VAZIO

CONSTMUL -> OPATTR numconst
CONSTMUL -> VAZIO

VALLAST -> OPEXPP4
VALLAST -> charconst
VALLAST -> EXPP1

LSTVAL -> , VALLAST LSTVAL
LSTVAL -> VAZIO

CMDIF -> if EXPCMP : ident LSTCMD desident ELSE

ELSE -> else : ident LSTCMD desident
ELSE -> elif EXPCMP : ident LSTCMD desident ELSE
ELSE -> VAZIO

ARRAYVALS -> OPEXPP4
ARRAYVALS -> charconst

ARRAY -> [ ARRAYVALS ]
ARRAY -> [ ARRAYVALS LSTVAL ]

VARFOR -> id
VARFOR -> ARRAY
VARFOR -> RANGE

RANGE -> range ( START OPEXPP4 STEP )

START -> OPEXPP4 ,
START -> VAZIO

STEP -> , OPEXPP4
STEP -> VAZIO

CMDFOR -> for id in VARFOR : ident LSTCMD desident

CMDWHILE -> while EXPCMP : ident LSTCMD desident

ARGS -> ( )
ARGS -> ( CMDCST )
ARGS -> ( id )
ARGS -> ( id LSTVAL )

CMDFUNC -> def id ARGS : ident LSTCMD desident

CMDRETURN -> return EXPP1

EXECFUNC -> id ARGS

